
syntax = "proto2";

package paxos;


enum EntryType {

    CONFIGURATION = 1;

    DATA = 2;

};


message Entry {

    required EntryType type = 1;

    required uint64 index = 2;

    required uint64 proposed_num = 3;

    optional uint64 promised_num = 4;

    optional uint64 accepted_num = 5;

    optional bytes accepted_value = 6;
};


message HardState {
    required uint64 index = 1;
    required uint64 proposed_num = 2;
    optional uint64 promised_num = 3;
    optional uint64 accepted_num = 5;
    optional bytes accepted_value = 6;

    required uint64 logid = 7;
};


message LogEntry {
    required uint64 logid = 1;
    optional bytes key = 2;
    optional bytes value = 3;
};

enum MessageType {

    UNKOWN = 0;
    NOOP = 1;
    PROP = 2; 
    PROP_RSP = 3; 
    ACCPT = 4; 
    ACCPT_RSP = 5; 

    CHOSEN = 6; 

    CATCHUP = 10;
    BEGIN_PROP = 11;
    TRY_PROP = 12;

    ERROR = -1;
};

message Message {
    required MessageType type = 1;
    required uint64 peer_id = 2;
    required uint64 to_id = 3;

    required uint64 index = 4;
    required uint64 proposed_num = 5;
    optional uint64 promised_num = 6;
    optional uint64 accepted_num = 7;
    optional bytes accepted_value = 8;

    required uint64 logid = 9;
};
